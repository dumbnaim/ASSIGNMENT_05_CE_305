 def store(storage, elm):
    """
    Store the block values in the main memory.
    """
    storage.update(elm)
    return storage

def dir_map_cache(cache, adr, storage):
    """
    Directly map a block from main memory to the cache.
    """
    # Extracting the block and tag segments from the address
    tag, block = adr[:7], adr[7:11]

    # Check if the block exists in the main memory
    if adr in storage:
        # Map the block to the cache
        cache[block] = [tag, storage[adr], 1]  # 1 represents valid
    return cache

def check_cache(cache, adr):
    """
    Check if an address is saved in the cache.
    """
    # Extracting the block and tag segments from the address
    tag, block = adr[:7], adr[7:11]

    # Check if the block is in the cache and if the tag matches
    if cache[block][0] == tag and cache[block][2] == 1:  # 1 represents valid
        return "Hit"
    else:
        return "Miss"

# Initialize main memory and cache
init_mem = {}
cache = {
    "0000": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "0001": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "0010": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "0011": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "0100": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "0101": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "0110": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "0111": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "1000": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "1001": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "1010": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "1011": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "1100": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "1101": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "1110": ["0000000", [0,0,0,0,0,0,0,0], 0],
    "1111": ["0000000", [0,0,0,0,0,0,0,0], 0]
}

# Test the functions
a = {"00000110101000": [0, 1, 2, 3, 4, 5, 6, 7]}
b = {"00001110101000": [10, 11, 12, 13, 14, 15, 16, 17]}
c = {"00001110111000": [20, 21, 22, 23, 24, 25, 26, 27]}

mem = store(init_mem, a)
mem = store(mem, b)
mem = store(mem, c)

adr1 = "00000110101010"  # hex address: 1AA
adr2 = "00001110101010"  # hex address: 3AA
adr3 = "00001110111111"  # hex address: 7BF

cache = dir_map_cache(cache, adr1, mem)
cache = dir_map_cache(cache, adr2, mem)
cache = dir_map_cache(cache, adr3, mem)

# Check cache hits and misses
hit_miss_1 = check_cache(cache, adr1)
hit_miss_2 = check_cache(cache, adr2)
hit_miss_3 = check_cache(cache, adr3)


(cache, hit_miss_1, hit_miss_2, hit_miss_3)

# Print cache on new lines
for key, value in cache.items():
    print(f"{key}: {value}")

# Print cache hits and misses
print(hit_miss_1)
print(hit_miss_2)
print(hit_miss_3)
